"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Circle {
    constructor(env) {
        this.env = env;
    }
    isCurrentlyRunning() {
        return this.env["CIRCLECI"] === "true";
    }
    getPullRequestID() {
        const prLink = this.env["CIRCLE_PULL_REQUEST"] || "";
        // get everything before last slash
        const parts = prLink.split("/");
        const prNumberRaw = parts[parts.length - 1];
        const prNumber = parseInt(prNumberRaw);
        if (isNaN(prNumber)) {
            return undefined;
        }
        return prNumber;
    }
    getCurrentSha() {
        const sha = this.env["CIRCLE_SHA1"];
        if (!sha) {
            throw new Error("Couldnt get target SHA");
        }
        return sha;
    }
    isFork() {
        if (!this.env["CIRCLE_PULL_REQUEST"]) {
            return false;
        }
        return !!this.env.CIRCLE_PR_USERNAME && !!this.env.CIRCLE_PR_REPONAME;
    }
    getProjectSlug() {
        const user = this.env["CIRCLE_PROJECT_USERNAME"];
        const projectName = this.env["CIRCLE_PROJECT_REPONAME"];
        if (!user || !projectName) {
            throw new Error("Missing CIRCLE_PROJECT_USERNAME or CIRCLE_PROJECT_REPONAME");
        }
        return `${user}/${projectName}`;
    }
    supportsSpeculativeBranchSelection() {
        return true;
    }
}
exports.Circle = Circle;
//# sourceMappingURL=Circle.js.map